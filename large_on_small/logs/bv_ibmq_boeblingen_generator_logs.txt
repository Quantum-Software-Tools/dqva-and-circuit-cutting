Existing cases: dict_keys([(11, 21), (12, 22), (12, 23), (13, 24), (13, 25)])
----------------------------------------------------------------------------------------------------
Case (14, 26)
solving for 2 clusters
********************
MIQCP stats:
1 cuts, 2 clusters, max qubit = 14
cluster 0: original input = 13.00, rho qubits = 0.00, O qubits = 1.00, d = 13.00, K = 1.00
cluster 1: original input = 13.00, rho qubits = 1.00, O qubits = 0.00, d = 14.00, K = 1.00
objective value: 538499933.0200653
manually calculated objective value: 536870912.0
runtime: 0.1392359733581543
OPTIMAL
********************
1 cases to run: dict_keys([(14, 26)])
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Case (14, 27)
solving for 2 clusters
********************
MIQCP stats:
1 cuts, 2 clusters, max qubit = 14
cluster 0: original input = 14.00, rho qubits = 0.00, O qubits = 1.00, d = 14.00, K = 1.00
cluster 1: original input = 13.00, rho qubits = 1.00, O qubits = 0.00, d = 14.00, K = 1.00
objective value: 1077068581.7196655
manually calculated objective value: 1073741824.0
runtime: 0.10102009773254395
OPTIMAL
********************
2 cases to run: dict_keys([(14, 26), (14, 27)])
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Case (15, 28)
solving for 2 clusters
********************
MIQCP stats:
1 cuts, 2 clusters, max qubit = 15
cluster 0: original input = 14.00, rho qubits = 0.00, O qubits = 1.00, d = 14.00, K = 1.00
cluster 1: original input = 14.00, rho qubits = 1.00, O qubits = 0.00, d = 15.00, K = 1.00
objective value: 2154268560.843582
manually calculated objective value: 2147483648.0
runtime: 0.11903595924377441
OPTIMAL
********************
3 cases to run: dict_keys([(14, 26), (14, 27), (15, 28)])
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Case (15, 29)
solving for 2 clusters
********************
MIQCP stats:
1 cuts, 2 clusters, max qubit = 15
cluster 0: original input = 15.00, rho qubits = 0.00, O qubits = 1.00, d = 15.00, K = 1.00
cluster 1: original input = 14.00, rho qubits = 1.00, O qubits = 0.00, d = 15.00, K = 1.00
objective value: 4308787805.7895355
manually calculated objective value: 4294967296.0
runtime: 0.1238560676574707
OPTIMAL
********************
4 cases to run: dict_keys([(14, 26), (14, 27), (15, 28), (15, 29)])
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Case (16, 30)
solving for 2 clusters
********************
MIQCP stats:
1 cuts, 2 clusters, max qubit = 16
cluster 0: original input = 15.00, rho qubits = 0.00, O qubits = 1.00, d = 15.00, K = 1.00
cluster 1: original input = 15.00, rho qubits = 1.00, O qubits = 0.00, d = 16.00, K = 1.00
objective value: 8618052672.55429
manually calculated objective value: 8589934592.0
runtime: 0.20377492904663086
OPTIMAL
********************
5 cases to run: dict_keys([(14, 26), (14, 27), (15, 28), (15, 29), (16, 30)])
----------------------------------------------------------------------------------------------------
Running case (14, 26)
Dump evaluator_input with 6 cases
**************************************************
Running case (14, 27)
Dump evaluator_input with 7 cases
**************************************************
Running case (15, 28)
Dump evaluator_input with 8 cases
**************************************************
Running case (15, 29)
Dump evaluator_input with 9 cases
**************************************************
Running case (16, 30)
Dump evaluator_input with 10 cases
**************************************************
----------------------------------------------------------------------------------------------------
