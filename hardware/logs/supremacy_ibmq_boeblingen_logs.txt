-------------------------------------------------- Generator --------------------------------------------------
Existing cases: dict_keys([])
Generating 1x3, 1+8+1 supremacy circuit
Using license file /home/weit/gurobi.lic
Academic license - for non-commercial use only
********************
MIQCP stats:
1 cuts, 2 clusters, max qubit = 2
cluster 0: original input = 2.00, ρ_qubits = 0.00, O_qubits = 1.00, d = 2.00
cluster 1: original input = 1.00, ρ_qubits = 1.00, O_qubits = 0.00, d = 2.00
objective value = 9.000e+00
manually calculated objective value: 9.000e+00
evaluator_cost = 9, reconstructor_cost = 1.340e-07, reconstructor_weight = 0.000e+00
runtime: 0.0004489421844482422
OPTIMAL
********************
Adding case (2, 3) to run
Adding 3 qubit full circuit to run
3 qubit circuit saturated shots = 7168, ΔH = 2.139e-04
----------------------------------------------------------------------------------------------------
Case (3, 3) impossible, skipped
----------------------------------------------------------------------------------------------------
Case (4, 3) impossible, skipped
----------------------------------------------------------------------------------------------------
Case (5, 3) impossible, skipped
----------------------------------------------------------------------------------------------------
Case (6, 3) impossible, skipped
----------------------------------------------------------------------------------------------------
Case (7, 3) impossible, skipped
----------------------------------------------------------------------------------------------------
Case (8, 3) impossible, skipped
----------------------------------------------------------------------------------------------------
Case (9, 3) impossible, skipped
----------------------------------------------------------------------------------------------------
Generating 2x2, 1+8+1 supremacy circuit
Case (2, 4) impossible, skipped
----------------------------------------------------------------------------------------------------
********************
MIQCP stats:
2 cuts, 2 clusters, max qubit = 3
cluster 0: original input = 2.00, ρ_qubits = 1.00, O_qubits = 1.00, d = 3.00
cluster 1: original input = 2.00, ρ_qubits = 1.00, O_qubits = 1.00, d = 3.00
objective value = 3.600e+01
manually calculated objective value: 3.600e+01
evaluator_cost = 36, reconstructor_cost = 1.065e-06, reconstructor_weight = 0.000e+00
runtime: 0.018170833587646484
OPTIMAL
********************
Adding case (3, 4) to run
Adding 4 qubit full circuit to run
4 qubit circuit saturated shots = 10240, ΔH = 8.809e-04
----------------------------------------------------------------------------------------------------
Case (4, 4) impossible, skipped
----------------------------------------------------------------------------------------------------
Case (5, 4) impossible, skipped
----------------------------------------------------------------------------------------------------
Case (6, 4) impossible, skipped
----------------------------------------------------------------------------------------------------
Case (7, 4) impossible, skipped
----------------------------------------------------------------------------------------------------
Case (8, 4) impossible, skipped
----------------------------------------------------------------------------------------------------
Case (9, 4) impossible, skipped
----------------------------------------------------------------------------------------------------
Generating 1x5, 1+8+1 supremacy circuit
Case (2, 5) impossible, skipped
----------------------------------------------------------------------------------------------------
********************
MIQCP stats:
1 cuts, 2 clusters, max qubit = 3
cluster 0: original input = 3.00, ρ_qubits = 0.00, O_qubits = 1.00, d = 3.00
cluster 1: original input = 2.00, ρ_qubits = 1.00, O_qubits = 0.00, d = 3.00
objective value = 9.000e+00
manually calculated objective value: 9.000e+00
evaluator_cost = 9, reconstructor_cost = 5.288e-07, reconstructor_weight = 0.000e+00
runtime: 0.01010894775390625
OPTIMAL
********************
Adding case (3, 5) to run
Adding 5 qubit full circuit to run
5 qubit circuit saturated shots = 12288, ΔH = 9.907e-04
----------------------------------------------------------------------------------------------------
********************
MIQCP stats:
1 cuts, 2 clusters, max qubit = 4
cluster 0: original input = 2.00, ρ_qubits = -0.00, O_qubits = 1.00, d = 2.00
cluster 1: original input = 3.00, ρ_qubits = 1.00, O_qubits = -0.00, d = 4.00
objective value = 9.001e+00
manually calculated objective value: 9.000e+00
evaluator_cost = 9, reconstructor_cost = 5.288e-07, reconstructor_weight = 0.000e+00
runtime: 0.026273012161254883
OPTIMAL
********************
Adding case (4, 5) to run
Use currently running 5 qubit full circuit
----------------------------------------------------------------------------------------------------
Case (5, 5) impossible, skipped
----------------------------------------------------------------------------------------------------
Case (6, 5) impossible, skipped
----------------------------------------------------------------------------------------------------
Case (7, 5) impossible, skipped
----------------------------------------------------------------------------------------------------
Case (8, 5) impossible, skipped
----------------------------------------------------------------------------------------------------
Case (9, 5) impossible, skipped
----------------------------------------------------------------------------------------------------
Generating 3x2, 1+8+1 supremacy circuit
Case (2, 6) impossible, skipped
----------------------------------------------------------------------------------------------------
Case (3, 6) NOT feasible
----------------------------------------------------------------------------------------------------
********************
MIQCP stats:
4 cuts, 3 clusters, max qubit = 4
cluster 0: original input = 3.00, ρ_qubits = 1.00, O_qubits = 2.00, d = 4.00
cluster 1: original input = 3.00, ρ_qubits = 1.00, O_qubits = 2.00, d = 4.00
cluster 2: original input = 0.00, ρ_qubits = 2.00, O_qubits = 0.00, d = 2.00
objective value = 1.440e+02
manually calculated objective value: 1.440e+02
evaluator_cost = 144, reconstructor_cost = 8.426e-05, reconstructor_weight = 0.000e+00
runtime: 0.10919904708862305
OPTIMAL
********************
Adding case (4, 6) to run
Adding 6 qubit full circuit to run
6 qubit circuit saturated shots = 38912, ΔH = 9.728e-04
----------------------------------------------------------------------------------------------------
********************
MIQCP stats:
2 cuts, 2 clusters, max qubit = 5
cluster 0: original input = 2.00, ρ_qubits = 1.00, O_qubits = 1.00, d = 3.00
cluster 1: original input = 4.00, ρ_qubits = 1.00, O_qubits = 1.00, d = 5.00
objective value = 3.601e+01
manually calculated objective value: 3.600e+01
evaluator_cost = 36, reconstructor_cost = 4.201e-06, reconstructor_weight = 0.000e+00
runtime: 0.05478096008300781
OPTIMAL
********************
Adding case (5, 6) to run
Use currently running 6 qubit full circuit
----------------------------------------------------------------------------------------------------
Case (6, 6) impossible, skipped
----------------------------------------------------------------------------------------------------
Case (7, 6) impossible, skipped
----------------------------------------------------------------------------------------------------
Case (8, 6) impossible, skipped
----------------------------------------------------------------------------------------------------
Case (9, 6) impossible, skipped
----------------------------------------------------------------------------------------------------
Generating 1x7, 1+8+1 supremacy circuit
Case (2, 7) impossible, skipped
----------------------------------------------------------------------------------------------------
Case (3, 7) impossible, skipped
----------------------------------------------------------------------------------------------------
********************
MIQCP stats:
1 cuts, 2 clusters, max qubit = 4
cluster 0: original input = 4.00, ρ_qubits = -0.00, O_qubits = 1.00, d = 4.00
cluster 1: original input = 3.00, ρ_qubits = 1.00, O_qubits = 0.00, d = 4.00
objective value = 9.001e+00
manually calculated objective value: 9.000e+00
evaluator_cost = 9, reconstructor_cost = 2.086e-06, reconstructor_weight = 0.000e+00
runtime: 0.02345895767211914
OPTIMAL
********************
Adding case (4, 7) to run
Adding 7 qubit full circuit to run
7 qubit circuit saturated shots = 43008, ΔH = 9.986e-04
----------------------------------------------------------------------------------------------------
********************
MIQCP stats:
1 cuts, 2 clusters, max qubit = 5
cluster 0: original input = 3.00, ρ_qubits = 0.00, O_qubits = 1.00, d = 3.00
cluster 1: original input = 4.00, ρ_qubits = 1.00, O_qubits = 0.00, d = 5.00
objective value = 9.001e+00
manually calculated objective value: 9.000e+00
evaluator_cost = 9, reconstructor_cost = 2.086e-06, reconstructor_weight = 0.000e+00
runtime: 0.0475161075592041
OPTIMAL
********************
Adding case (5, 7) to run
Use currently running 7 qubit full circuit
----------------------------------------------------------------------------------------------------
********************
MIQCP stats:
1 cuts, 2 clusters, max qubit = 6
cluster 0: original input = 2.00, ρ_qubits = -0.00, O_qubits = 1.00, d = 2.00
cluster 1: original input = 5.00, ρ_qubits = 1.00, O_qubits = 0.00, d = 6.00
objective value = 9.002e+00
manually calculated objective value: 9.000e+00
evaluator_cost = 9, reconstructor_cost = 2.086e-06, reconstructor_weight = 0.000e+00
runtime: 0.04203391075134277
OPTIMAL
********************
Adding case (6, 7) to run
Use currently running 7 qubit full circuit
----------------------------------------------------------------------------------------------------
Case (7, 7) impossible, skipped
----------------------------------------------------------------------------------------------------
Case (8, 7) impossible, skipped
----------------------------------------------------------------------------------------------------
Case (9, 7) impossible, skipped
----------------------------------------------------------------------------------------------------
Generating 2x4, 1+8+1 supremacy circuit
Case (2, 8) impossible, skipped
----------------------------------------------------------------------------------------------------
Case (3, 8) impossible, skipped
----------------------------------------------------------------------------------------------------
********************
MIQCP stats:
4 cuts, 3 clusters, max qubit = 4
cluster 0: original input = 3.00, ρ_qubits = 1.00, O_qubits = 2.00, d = 4.00
cluster 1: original input = 3.00, ρ_qubits = 1.00, O_qubits = 1.00, d = 4.00
cluster 2: original input = 2.00, ρ_qubits = 2.00, O_qubits = 1.00, d = 4.00
objective value = 1.800e+02
manually calculated objective value: 1.800e+02
evaluator_cost = 180, reconstructor_cost = 2.991e-04, reconstructor_weight = 0.000e+00
runtime: 0.1526029109954834
OPTIMAL
********************
Adding case (4, 8) to run
Adding 8 qubit full circuit to run
8 qubit circuit saturated shots = 150528, ΔH = 1.022e-03
----------------------------------------------------------------------------------------------------
********************
MIQCP stats:
4 cuts, 3 clusters, max qubit = 5
cluster 0: original input = 4.00, ρ_qubits = 1.00, O_qubits = 2.00, d = 5.00
cluster 1: original input = 4.00, ρ_qubits = 1.00, O_qubits = 2.00, d = 5.00
cluster 2: original input = 0.00, ρ_qubits = 2.00, O_qubits = 0.00, d = 2.00
objective value = 1.440e+02
manually calculated objective value: 1.440e+02
evaluator_cost = 144, reconstructor_cost = 3.325e-04, reconstructor_weight = 0.000e+00
runtime: 0.14872097969055176
OPTIMAL
********************
Adding case (5, 8) to run
Use currently running 8 qubit full circuit
----------------------------------------------------------------------------------------------------
********************
MIQCP stats:
2 cuts, 2 clusters, max qubit = 6
cluster 0: original input = 5.00, ρ_qubits = 1.00, O_qubits = 1.00, d = 6.00
cluster 1: original input = 3.00, ρ_qubits = 1.00, O_qubits = 1.00, d = 4.00
objective value = 3.600e+01
manually calculated objective value: 3.600e+01
evaluator_cost = 36, reconstructor_cost = 1.658e-05, reconstructor_weight = 0.000e+00
runtime: 0.06356406211853027
OPTIMAL
********************
Adding case (6, 8) to run
Use currently running 8 qubit full circuit
----------------------------------------------------------------------------------------------------
********************
MIQCP stats:
2 cuts, 2 clusters, max qubit = 7
cluster 0: original input = 6.00, ρ_qubits = 1.00, O_qubits = 1.00, d = 7.00
cluster 1: original input = 2.00, ρ_qubits = 1.00, O_qubits = 1.00, d = 3.00
objective value = 3.601e+01
manually calculated objective value: 3.600e+01
evaluator_cost = 35, reconstructor_cost = 1.658e-05, reconstructor_weight = 0.000e+00
runtime: 0.09400010108947754
OPTIMAL
********************
Adding case (7, 8) to run
Use currently running 8 qubit full circuit
----------------------------------------------------------------------------------------------------
Case (8, 8) impossible, skipped
----------------------------------------------------------------------------------------------------
Case (9, 8) impossible, skipped
----------------------------------------------------------------------------------------------------
Generating 3x3, 1+8+1 supremacy circuit
Case (2, 9) impossible, skipped
----------------------------------------------------------------------------------------------------
Case (3, 9) impossible, skipped
----------------------------------------------------------------------------------------------------
Case (4, 9) NOT feasible
----------------------------------------------------------------------------------------------------
********************
MIQCP stats:
5 cuts, 3 clusters, max qubit = 5
cluster 0: original input = 3.00, ρ_qubits = 2.00, O_qubits = 1.00, d = 5.00
cluster 1: original input = 2.00, ρ_qubits = 2.00, O_qubits = 1.00, d = 4.00
cluster 2: original input = 4.00, ρ_qubits = 1.00, O_qubits = 3.00, d = 5.00
objective value = 3.781e+02
manually calculated objective value: 3.780e+02
evaluator_cost = 378, reconstructor_cost = 2.641e-03, reconstructor_weight = 0.000e+00
runtime: 0.1875319480895996
OPTIMAL
********************
Adding case (5, 9) to run
Adding 9 qubit full circuit to run
9 qubit circuit saturated shots = 313344, ΔH = 1.008e-03
----------------------------------------------------------------------------------------------------
********************
MIQCP stats:
3 cuts, 2 clusters, max qubit = 6
cluster 0: original input = 5.00, ρ_qubits = 1.00, O_qubits = 2.00, d = 6.00
cluster 1: original input = 4.00, ρ_qubits = 2.00, O_qubits = 1.00, d = 6.00
objective value = 1.620e+02
manually calculated objective value: 1.620e+02
evaluator_cost = 161, reconstructor_cost = 1.317e-04, reconstructor_weight = 0.000e+00
runtime: 0.06702113151550293
OPTIMAL
********************
Adding case (6, 9) to run
Use currently running 9 qubit full circuit
----------------------------------------------------------------------------------------------------
********************
MIQCP stats:
3 cuts, 2 clusters, max qubit = 7
cluster 0: original input = 6.00, ρ_qubits = 1.00, O_qubits = 2.00, d = 7.00
cluster 1: original input = 3.00, ρ_qubits = 2.00, O_qubits = 1.00, d = 5.00
objective value = 1.620e+02
manually calculated objective value: 1.620e+02
evaluator_cost = 161, reconstructor_cost = 1.317e-04, reconstructor_weight = 0.000e+00
runtime: 0.1338670253753662
OPTIMAL
********************
Adding case (7, 9) to run
Use currently running 9 qubit full circuit
----------------------------------------------------------------------------------------------------
********************
MIQCP stats:
2 cuts, 2 clusters, max qubit = 8
cluster 0: original input = 6.00, ρ_qubits = 2.00, O_qubits = 0.00, d = 8.00
cluster 1: original input = 3.00, ρ_qubits = 0.00, O_qubits = 2.00, d = 3.00
objective value = 4.502e+01
manually calculated objective value: 4.500e+01
evaluator_cost = 45, reconstructor_cost = 3.293e-05, reconstructor_weight = 0.000e+00
runtime: 0.1118919849395752
OPTIMAL
********************
Adding case (8, 9) to run
Use currently running 9 qubit full circuit
----------------------------------------------------------------------------------------------------
Case (9, 9) impossible, skipped
----------------------------------------------------------------------------------------------------
Generating 2x5, 1+8+1 supremacy circuit
Case (2, 10) impossible, skipped
----------------------------------------------------------------------------------------------------
Case (3, 10) impossible, skipped
----------------------------------------------------------------------------------------------------
Case (4, 10) impossible, skipped
----------------------------------------------------------------------------------------------------
********************
MIQCP stats:
4 cuts, 3 clusters, max qubit = 5
cluster 0: original input = 4.00, ρ_qubits = 0.00, O_qubits = 2.00, d = 4.00
cluster 1: original input = 3.00, ρ_qubits = 2.00, O_qubits = 2.00, d = 5.00
cluster 2: original input = 3.00, ρ_qubits = 2.00, O_qubits = -0.00, d = 5.00
objective value = 3.690e+02
manually calculated objective value: 3.690e+02
evaluator_cost = 369, reconstructor_cost = 1.080e-03, reconstructor_weight = 0.000e+00
runtime: 0.1757488250732422
OPTIMAL
********************
Adding case (5, 10) to run
Adding 10 qubit full circuit to run
10 qubit circuit saturated shots = 526336, ΔH = 1.024e-03
----------------------------------------------------------------------------------------------------
********************
MIQCP stats:
2 cuts, 2 clusters, max qubit = 6
cluster 0: original input = 5.00, ρ_qubits = 1.00, O_qubits = 1.00, d = 6.00
cluster 1: original input = 5.00, ρ_qubits = 1.00, O_qubits = 1.00, d = 6.00
objective value = 3.600e+01
manually calculated objective value: 3.600e+01
evaluator_cost = 36, reconstructor_cost = 6.541e-05, reconstructor_weight = 0.000e+00
runtime: 0.06281495094299316
OPTIMAL
********************
Adding case (6, 10) to run
Use currently running 10 qubit full circuit
----------------------------------------------------------------------------------------------------
********************
MIQCP stats:
2 cuts, 2 clusters, max qubit = 7
cluster 0: original input = 5.00, ρ_qubits = 1.00, O_qubits = 1.00, d = 6.00
cluster 1: original input = 5.00, ρ_qubits = 1.00, O_qubits = 1.00, d = 6.00
objective value = 3.601e+01
manually calculated objective value: 3.600e+01
evaluator_cost = 36, reconstructor_cost = 6.541e-05, reconstructor_weight = 0.000e+00
runtime: 0.06144595146179199
OPTIMAL
********************
Adding case (7, 10) to run
Use currently running 10 qubit full circuit
----------------------------------------------------------------------------------------------------
********************
MIQCP stats:
2 cuts, 2 clusters, max qubit = 8
cluster 0: original input = 5.00, ρ_qubits = 1.00, O_qubits = 1.00, d = 6.00
cluster 1: original input = 5.00, ρ_qubits = 1.00, O_qubits = 1.00, d = 6.00
objective value = 3.601e+01
manually calculated objective value: 3.600e+01
evaluator_cost = 36, reconstructor_cost = 6.541e-05, reconstructor_weight = 0.000e+00
runtime: 0.07410788536071777
OPTIMAL
********************
Adding case (8, 10) to run
Use currently running 10 qubit full circuit
----------------------------------------------------------------------------------------------------
********************
MIQCP stats:
2 cuts, 2 clusters, max qubit = 9
cluster 0: original input = 8.00, ρ_qubits = 1.00, O_qubits = 1.00, d = 9.00
cluster 1: original input = 2.00, ρ_qubits = 1.00, O_qubits = 1.00, d = 3.00
objective value = 3.602e+01
manually calculated objective value: 3.600e+01
evaluator_cost = 36, reconstructor_cost = 6.541e-05, reconstructor_weight = 0.000e+00
runtime: 0.1379251480102539
OPTIMAL
********************
Adding case (9, 10) to run
Use currently running 10 qubit full circuit
----------------------------------------------------------------------------------------------------
22 cases, 8 full circuits to run : dict_keys([(2, 3), (3, 4), (3, 5), (4, 5), (4, 6), (5, 6), (4, 7), (5, 7), (6, 7), (4, 8), (5, 8), (6, 8), (7, 8), (5, 9), (6, 9), (7, 9), (8, 9), (5, 10), (6, 10), (7, 10), (8, 10), (9, 10)])
******************** Submitting jobs ********************
Submitting job 1/1 5e191091d21cfa0012d8a891 --> 8 circuits, 139 * 8192 shots
/home/weit/anaconda3/envs/cc-env/lib/python3.7/site-packages/qiskit/providers/models/backendconfiguration.py:337: UserWarning: `dt` and `dtm` now have units of seconds(s) rather than nanoseconds(ns).
  warnings.warn('`dt` and `dtm` now have units of seconds(s) rather '
******************** Submitting jobs ********************
Submitting job 1/2 5e191124b9e88e0011fb8e22 --> 900 circuits, 900 * 8192 shots
Submitting job 2/2 5e191138eea81b00116220ff --> 116 circuits, 116 * 8192 shots
******************** Retrieving jobs ********************
Retrieving job 1/1 5e191091d21cfa0012d8a891 --> 8 circuits, 139 * 8192 shots
******************** Retrieving jobs ********************
Retrieving job 1/2 5e191124b9e88e0011fb8e22 --> 900 circuits, 900 * 8192 shots
Retrieving job 2/2 5e191138eea81b00116220ff --> 116 circuits, 116 * 8192 shots
Computing calibration matrix for 3 qubit circuit took 2.275e-04 seconds
Computing calibration matrix for 4 qubit circuit took 4.284e-04 seconds
Computing calibration matrix for 5 qubit circuit took 1.731e-03 seconds
Computing calibration matrix for 6 qubit circuit took 7.513e-03 seconds
Computing calibration matrix for 7 qubit circuit took 3.258e-02 seconds
Computing calibration matrix for 8 qubit circuit took 1.411e-01 seconds
Computing calibration matrix for 9 qubit circuit took 6.094e-01 seconds
-------------------------------------------------- Evaluator --------------------------------------------------
Existing cases: dict_keys([])
Running case: (2, 3)
case (2, 3), cluster_0 2_qubits * 3_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
case (2, 3), cluster_1 2_qubits * 6_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
Rank MASTER dumped case (2, 3), 1/22 cases
----------------------------------------------------------------------------------------------------
Running case: (3, 4)
case (3, 4), cluster_0 3_qubits * 18_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
case (3, 4), cluster_1 3_qubits * 18_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
Rank MASTER dumped case (3, 4), 2/22 cases
----------------------------------------------------------------------------------------------------
Running case: (3, 5)
case (3, 5), cluster_0 3_qubits * 3_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
case (3, 5), cluster_1 3_qubits * 6_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
Rank MASTER dumped case (3, 5), 3/22 cases
----------------------------------------------------------------------------------------------------
Running case: (4, 5)
case (4, 5), cluster_0 2_qubits * 3_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
case (4, 5), cluster_1 4_qubits * 6_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
Rank MASTER dumped case (4, 5), 4/22 cases
----------------------------------------------------------------------------------------------------
Running case: (4, 6)
case (4, 6), cluster_0 4_qubits * 54_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
case (4, 6), cluster_1 4_qubits * 54_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
case (4, 6), cluster_2 2_qubits * 36_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
Rank MASTER dumped case (4, 6), 5/22 cases
----------------------------------------------------------------------------------------------------
Running case: (5, 6)
case (5, 6), cluster_0 3_qubits * 18_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
case (5, 6), cluster_1 5_qubits * 18_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
Rank MASTER dumped case (5, 6), 6/22 cases
----------------------------------------------------------------------------------------------------
Running case: (4, 7)
case (4, 7), cluster_0 4_qubits * 3_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
case (4, 7), cluster_1 4_qubits * 6_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
Rank MASTER dumped case (4, 7), 7/22 cases
----------------------------------------------------------------------------------------------------
Running case: (5, 7)
case (5, 7), cluster_0 3_qubits * 3_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
case (5, 7), cluster_1 5_qubits * 6_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
Rank MASTER dumped case (5, 7), 8/22 cases
----------------------------------------------------------------------------------------------------
Running case: (6, 7)
case (6, 7), cluster_0 2_qubits * 3_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
case (6, 7), cluster_1 6_qubits * 6_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
Rank MASTER dumped case (6, 7), 9/22 cases
----------------------------------------------------------------------------------------------------
Running case: (4, 8)
case (4, 8), cluster_0 4_qubits * 54_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
case (4, 8), cluster_1 4_qubits * 18_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
case (4, 8), cluster_2 4_qubits * 108_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
Rank MASTER dumped case (4, 8), 10/22 cases
----------------------------------------------------------------------------------------------------
Running case: (5, 8)
case (5, 8), cluster_0 5_qubits * 54_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
case (5, 8), cluster_1 5_qubits * 54_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
case (5, 8), cluster_2 2_qubits * 36_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
Rank MASTER dumped case (5, 8), 11/22 cases
----------------------------------------------------------------------------------------------------
Running case: (6, 8)
case (6, 8), cluster_0 6_qubits * 18_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
case (6, 8), cluster_1 4_qubits * 18_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
Rank MASTER dumped case (6, 8), 12/22 cases
----------------------------------------------------------------------------------------------------
Running case: (7, 8)
case (7, 8), cluster_0 7_qubits * 18_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
case (7, 8), cluster_1 3_qubits * 18_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
Rank MASTER dumped case (7, 8), 13/22 cases
----------------------------------------------------------------------------------------------------
Running case: (5, 9)
case (5, 9), cluster_0 5_qubits * 108_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
case (5, 9), cluster_1 4_qubits * 108_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
case (5, 9), cluster_2 5_qubits * 162_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
Rank MASTER dumped case (5, 9), 14/22 cases
----------------------------------------------------------------------------------------------------
Running case: (6, 9)
case (6, 9), cluster_0 6_qubits * 54_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
case (6, 9), cluster_1 6_qubits * 108_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
Rank MASTER dumped case (6, 9), 15/22 cases
----------------------------------------------------------------------------------------------------
Running case: (7, 9)
case (7, 9), cluster_0 7_qubits * 54_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
case (7, 9), cluster_1 5_qubits * 108_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
Rank MASTER dumped case (7, 9), 16/22 cases
----------------------------------------------------------------------------------------------------
Running case: (8, 9)
case (8, 9), cluster_0 8_qubits * 36_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
case (8, 9), cluster_1 3_qubits * 9_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
Rank MASTER dumped case (8, 9), 17/22 cases
----------------------------------------------------------------------------------------------------
Running case: (5, 10)
case (5, 10), cluster_0 4_qubits * 9_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
case (5, 10), cluster_1 5_qubits * 324_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
case (5, 10), cluster_2 5_qubits * 36_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
Rank MASTER dumped case (5, 10), 18/22 cases
----------------------------------------------------------------------------------------------------
Running case: (6, 10)
case (6, 10), cluster_0 6_qubits * 18_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
case (6, 10), cluster_1 6_qubits * 18_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
Rank MASTER dumped case (6, 10), 19/22 cases
----------------------------------------------------------------------------------------------------
Running case: (7, 10)
case (7, 10), cluster_0 6_qubits * 18_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
case (7, 10), cluster_1 6_qubits * 18_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
Rank MASTER dumped case (7, 10), 20/22 cases
----------------------------------------------------------------------------------------------------
Running case: (8, 10)
case (8, 10), cluster_0 6_qubits * 18_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
case (8, 10), cluster_1 6_qubits * 18_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
Rank MASTER dumped case (8, 10), 21/22 cases
----------------------------------------------------------------------------------------------------
Running case: (9, 10)
case (9, 10), cluster_0 9_qubits * 18_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
case (9, 10), cluster_1 3_qubits * 18_instances on ibmq_boeblingen QUANTUM HARDWARE, saturated shots
Rank MASTER dumped case (9, 10), 22/22 cases
----------------------------------------------------------------------------------------------------
-------------------------------------------------- Job Submittor --------------------------------------------------
Existing cases: dict_keys([])
Run cases: dict_keys([(2, 3), (3, 4), (3, 5), (4, 5), (4, 6), (5, 6), (4, 7), (5, 7), (6, 7), (4, 8), (5, 8), (6, 8), (7, 8), (5, 9), (6, 9), (7, 9), (8, 9), (5, 10), (6, 10), (7, 10), (8, 10), (9, 10)])
**************************************************
Case (2, 3)
2 qubit circuit saturated shots = 3072, ΔH = 2.255e-04
Cluster 0 saturated shots = 3072
2 qubit circuit saturated shots = 5120, ΔH = 2.018e-04
Cluster 1 saturated shots = 5120
Case (3, 4)
3 qubit circuit saturated shots = 10240, ΔH = 4.371e-04
Cluster 0 saturated shots = 10240
3 qubit circuit saturated shots = 5120, ΔH = 8.671e-04
Cluster 1 saturated shots = 5120
Case (3, 5)
3 qubit circuit saturated shots = 4096, ΔH = 6.743e-04
Cluster 0 saturated shots = 4096
3 qubit circuit saturated shots = 5120, ΔH = 8.222e-05
Cluster 1 saturated shots = 5120
Case (4, 5)
2 qubit circuit saturated shots = 5120, ΔH = 1.261e-04
Cluster 0 saturated shots = 5120
4 qubit circuit saturated shots = 7168, ΔH = 8.288e-04
Cluster 1 saturated shots = 7168
Case (4, 6)
4 qubit circuit saturated shots = 11264, ΔH = 9.466e-04
Cluster 0 saturated shots = 11264
4 qubit circuit saturated shots = 4096, ΔH = 9.028e-04
Cluster 1 saturated shots = 4096
2 qubit circuit saturated shots = 8192, ΔH = 1.784e-04
Cluster 2 saturated shots = 8192
Case (5, 6)
3 qubit circuit saturated shots = 3072, ΔH = 3.426e-04
Cluster 0 saturated shots = 3072
5 qubit circuit saturated shots = 16384, ΔH = 8.503e-04
Cluster 1 saturated shots = 16384
Case (4, 7)
4 qubit circuit saturated shots = 5120, ΔH = 4.982e-04
Cluster 0 saturated shots = 5120
4 qubit circuit saturated shots = 9216, ΔH = 4.419e-04
Cluster 1 saturated shots = 9216
Case (5, 7)
3 qubit circuit saturated shots = 4096, ΔH = 6.421e-04
Cluster 0 saturated shots = 4096
5 qubit circuit saturated shots = 8192, ΔH = 9.258e-04
Cluster 1 saturated shots = 8192
Case (6, 7)
2 qubit circuit saturated shots = 3072, ΔH = 1.740e-04
Cluster 0 saturated shots = 3072
6 qubit circuit saturated shots = 31744, ΔH = 9.797e-04
Cluster 1 saturated shots = 31744
Case (4, 8)
4 qubit circuit saturated shots = 9216, ΔH = 1.044e-03
Cluster 0 saturated shots = 9216
4 qubit circuit saturated shots = 6144, ΔH = 8.998e-04
Cluster 1 saturated shots = 6144
4 qubit circuit saturated shots = 10240, ΔH = 6.731e-04
Cluster 2 saturated shots = 10240
Case (5, 8)
5 qubit circuit saturated shots = 18432, ΔH = 9.520e-04
Cluster 0 saturated shots = 18432
5 qubit circuit saturated shots = 12288, ΔH = 8.148e-04
Cluster 1 saturated shots = 12288
2 qubit circuit saturated shots = 2048, ΔH = 5.990e-04
Cluster 2 saturated shots = 2048
Case (6, 8)
6 qubit circuit saturated shots = 31744, ΔH = 1.063e-03
Cluster 0 saturated shots = 31744
4 qubit circuit saturated shots = 9216, ΔH = 9.435e-04
Cluster 1 saturated shots = 9216
Case (7, 8)
7 qubit circuit saturated shots = 66560, ΔH = 1.036e-03
Cluster 0 saturated shots = 66560
3 qubit circuit saturated shots = 5120, ΔH = 5.349e-04
Cluster 1 saturated shots = 5120
Case (5, 9)
5 qubit circuit saturated shots = 13312, ΔH = 9.533e-04
Cluster 0 saturated shots = 13312
4 qubit circuit saturated shots = 6144, ΔH = 9.320e-04
Cluster 1 saturated shots = 6144
5 qubit circuit saturated shots = 11264, ΔH = 3.541e-04
Cluster 2 saturated shots = 11264
Case (6, 9)
6 qubit circuit saturated shots = 33792, ΔH = 9.658e-04
Cluster 0 saturated shots = 33792
6 qubit circuit saturated shots = 30720, ΔH = 1.031e-03
Cluster 1 saturated shots = 30720
Case (7, 9)
7 qubit circuit saturated shots = 76800, ΔH = 9.900e-04
Cluster 0 saturated shots = 76800
5 qubit circuit saturated shots = 23552, ΔH = 9.688e-04
Cluster 1 saturated shots = 23552
Case (8, 9)
8 qubit circuit saturated shots = 118784, ΔH = 1.009e-03
Cluster 0 saturated shots = 118784
3 qubit circuit saturated shots = 5120, ΔH = 3.902e-04
Cluster 1 saturated shots = 5120
Case (5, 10)
4 qubit circuit saturated shots = 9216, ΔH = 8.534e-04
Cluster 0 saturated shots = 9216
5 qubit circuit saturated shots = 10240, ΔH = 1.031e-03
Cluster 1 saturated shots = 10240
5 qubit circuit saturated shots = 10240, ΔH = 8.722e-04
Cluster 2 saturated shots = 10240
Case (6, 10)
6 qubit circuit saturated shots = 25600, ΔH = 1.016e-03
Cluster 0 saturated shots = 25600
6 qubit circuit saturated shots = 32768, ΔH = 1.017e-03
Cluster 1 saturated shots = 32768
Case (7, 10)
6 qubit circuit saturated shots = 34816, ΔH = 9.948e-04
Cluster 0 saturated shots = 34816
6 qubit circuit saturated shots = 24576, ΔH = 1.028e-03
Cluster 1 saturated shots = 24576
Case (8, 10)
6 qubit circuit saturated shots = 35840, ΔH = 1.035e-03
Cluster 0 saturated shots = 35840
6 qubit circuit saturated shots = 36864, ΔH = 1.047e-03
Cluster 1 saturated shots = 36864
Case (9, 10)
9 qubit circuit saturated shots = 268288, ΔH = 1.026e-03
Cluster 0 saturated shots = 268288
3 qubit circuit saturated shots = 8192, ΔH = 4.731e-04
Cluster 1 saturated shots = 8192
******************** Submitting jobs ********************
Submitting job 1/7 5e1926b4e91aa60012ffd6ae --> 510 circuits, 900 * 8192 shots
Submitting job 2/7 5e1927089572a90011c27d7f --> 450 circuits, 900 * 8192 shots
Submitting job 3/7 5e19273d38090b00118cb3c5 --> 249 circuits, 900 * 8192 shots
Submitting job 4/7 5e192766b9e88e0011fb8e25 --> 164 circuits, 900 * 8192 shots
Submitting job 5/7 5e19279efcba03001290c82b --> 250 circuits, 900 * 8192 shots
Submitting job 6/7 5e1927d7b9e88e0011fb8e27 --> 273 circuits, 900 * 8192 shots
Submitting job 7/7 5e1927eae91aa60012ffd6b0 --> 33 circuits, 501 * 8192 shots
/home/weit/anaconda3/envs/cc-env/lib/python3.7/site-packages/qiskit/providers/models/backendconfiguration.py:337: UserWarning: `dt` and `dtm` now have units of seconds(s) rather than nanoseconds(ns).
  warnings.warn('`dt` and `dtm` now have units of seconds(s) rather '
******************** Submitting jobs ********************
Submitting job 1/3 5e1928aad21cfa0012d8a894 --> 900 circuits, 900 * 8192 shots
Submitting job 2/3 5e1929419572a90011c27d80 --> 900 circuits, 900 * 8192 shots
Submitting job 3/3 5e19298b9572a90011c27d81 --> 424 circuits, 424 * 8192 shots
******************** Retrieving jobs ********************
Retrieving job 1/7 5e1926b4e91aa60012ffd6ae --> 510 circuits, 900 * 8192 shots
Retrieving job 2/7 5e1927089572a90011c27d7f --> 450 circuits, 900 * 8192 shots
Retrieving job 3/7 5e19273d38090b00118cb3c5 --> 249 circuits, 900 * 8192 shots
Retrieving job 4/7 5e192766b9e88e0011fb8e25 --> 164 circuits, 900 * 8192 shots
Traceback (most recent call last):
  File "/home/weit/anaconda3/envs/cc-env/lib/python3.7/site-packages/qiskit/providers/ibmq/api/session.py", line 207, in request
    response.raise_for_status()
  File "/home/weit/anaconda3/envs/cc-env/lib/python3.7/site-packages/requests/models.py", line 940, in raise_for_status
    raise HTTPError(http_error_msg, response=self)
requests.exceptions.HTTPError: 501 Server Error: Not Implemented for url: https://api-qcon.quantum-computing.ibm.com/api/Network/ibm-q-ornl/Groups/bes-qis/Projects/argonne/Jobs/5e192766b9e88e0011fb8e25/status?access_token=...

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/weit/anaconda3/envs/cc-env/lib/python3.7/site-packages/qiskit/providers/ibmq/job/utils.py", line 105, in api_to_job_error
    yield
  File "/home/weit/anaconda3/envs/cc-env/lib/python3.7/site-packages/qiskit/providers/ibmq/job/ibmqjob.py", line 477, in _wait_for_completion
    self.job_id(), timeout=timeout, wait=wait)
  File "/home/weit/anaconda3/envs/cc-env/lib/python3.7/site-packages/qiskit/providers/ibmq/api/clients/account.py", line 390, in job_final_status
    status_response = self._job_final_status_polling(job_id, timeout, wait)
  File "/home/weit/anaconda3/envs/cc-env/lib/python3.7/site-packages/qiskit/providers/ibmq/api/clients/account.py", line 447, in _job_final_status_polling
    status_response = self.job_status(job_id)
  File "/home/weit/anaconda3/envs/cc-env/lib/python3.7/site-packages/qiskit/providers/ibmq/api/clients/account.py", line 348, in job_status
    return self.client_api.job(job_id).status()
  File "/home/weit/anaconda3/envs/cc-env/lib/python3.7/site-packages/qiskit/providers/ibmq/api/rest/job.py", line 108, in status
    api_response = self.session.get(url).json()
  File "/home/weit/anaconda3/envs/cc-env/lib/python3.7/site-packages/requests/sessions.py", line 546, in get
    return self.request('GET', url, **kwargs)
  File "/home/weit/anaconda3/envs/cc-env/lib/python3.7/site-packages/qiskit/providers/ibmq/api/session.py", line 226, in request
    raise RequestsApiError(message) from ex
qiskit.providers.ibmq.api.exceptions.RequestsApiError: '501 Server Error: Not Implemented for url: https://api-qcon.quantum-computing.ibm.com/api/Network/ibm-q-ornl/Groups/bes-qis/Projects/argonne/Jobs/5e192766b9e88e0011fb8e25/status?access_token=...'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/weit/anaconda3/envs/cc-env/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/weit/anaconda3/envs/cc-env/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/weit/circuit_cutting/hardware/job_submittor.py", line 76, in <module>
    scheduler.retrieve()
  File "/home/weit/circuit_cutting/utils/submission.py", line 120, in retrieve
    hw_result = hw_job.result()
  File "/home/weit/anaconda3/envs/cc-env/lib/python3.7/site-packages/qiskit/providers/ibmq/job/ibmqjob.py", line 241, in result
    required_status=(JobStatus.DONE,)):
  File "/home/weit/anaconda3/envs/cc-env/lib/python3.7/site-packages/qiskit/providers/ibmq/job/ibmqjob.py", line 480, in _wait_for_completion
    'Timeout while waiting for job {}'.format(self._job_id))
  File "/home/weit/anaconda3/envs/cc-env/lib/python3.7/contextlib.py", line 130, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/weit/anaconda3/envs/cc-env/lib/python3.7/site-packages/qiskit/providers/ibmq/job/utils.py", line 107, in api_to_job_error
    raise IBMQJobApiError(str(api_err))
qiskit.providers.ibmq.job.exceptions.IBMQJobApiError: "'501 Server Error: Not Implemented for url: https://api-qcon.quantum-computing.ibm.com/api/Network/ibm-q-ornl/Groups/bes-qis/Projects/argonne/Jobs/5e192766b9e88e0011fb8e25/status?access_token=...'"
-------------------------------------------------- Reconstructor --------------------------------------------------
Existing cases: dict_keys([])
-------------------------------------------------- Evaluator --------------------------------------------------
Existing cases: dict_keys([(2, 3), (3, 4), (3, 5), (4, 5), (4, 6), (5, 6), (4, 7), (5, 7), (6, 7), (4, 8), (5, 8), (6, 8), (7, 8), (5, 9), (6, 9), (7, 9), (8, 9), (5, 10), (6, 10), (7, 10), (8, 10), (9, 10)])
-------------------------------------------------- Job Submittor --------------------------------------------------
Existing cases: dict_keys([])
Run cases: dict_keys([(2, 3), (3, 4), (3, 5), (4, 5), (4, 6), (5, 6), (4, 7), (5, 7), (6, 7), (4, 8), (5, 8), (6, 8), (7, 8), (5, 9), (6, 9), (7, 9), (8, 9), (5, 10), (6, 10), (7, 10), (8, 10), (9, 10)])
**************************************************
Case (2, 3)
Cluster 0 sametotal shots = 2389
Cluster 1 sametotal shots = 1194
Case (3, 4)
Cluster 0 sametotal shots = 568
Cluster 1 sametotal shots = 568
Case (3, 5)
Cluster 0 sametotal shots = 4096
Cluster 1 sametotal shots = 2048
Case (4, 5)
Cluster 0 sametotal shots = 4096
Cluster 1 sametotal shots = 2048
Case (4, 6)
Cluster 0 sametotal shots = 720
Cluster 1 sametotal shots = 720
Cluster 2 sametotal shots = 1080
Case (5, 6)
Cluster 0 sametotal shots = 2161
Cluster 1 sametotal shots = 2161
Case (4, 7)
Cluster 0 sametotal shots = 14336
Cluster 1 sametotal shots = 7168
Case (5, 7)
Cluster 0 sametotal shots = 14336
Cluster 1 sametotal shots = 7168
Case (6, 7)
Cluster 0 sametotal shots = 14336
Cluster 1 sametotal shots = 7168
Case (4, 8)
Cluster 0 sametotal shots = 2787
Cluster 1 sametotal shots = 8362
Cluster 2 sametotal shots = 1393
Case (5, 8)
Cluster 0 sametotal shots = 2787
Cluster 1 sametotal shots = 2787
Cluster 2 sametotal shots = 4181
Case (6, 8)
Cluster 0 sametotal shots = 8362
Cluster 1 sametotal shots = 8362
Case (7, 8)
Cluster 0 sametotal shots = 8362
Cluster 1 sametotal shots = 8362
Case (5, 9)
Cluster 0 sametotal shots = 2901
Cluster 1 sametotal shots = 2901
Cluster 2 sametotal shots = 1934
Case (6, 9)
Cluster 0 sametotal shots = 5802
Cluster 1 sametotal shots = 2901
Case (7, 9)
Cluster 0 sametotal shots = 5802
Cluster 1 sametotal shots = 2901
Case (8, 9)
Cluster 0 sametotal shots = 8704
Cluster 1 sametotal shots = 34816
Case (5, 10)
Cluster 0 sametotal shots = 58481
Cluster 1 sametotal shots = 1624
Cluster 2 sametotal shots = 14620
Case (6, 10)
Cluster 0 sametotal shots = 29240
Cluster 1 sametotal shots = 29240
Case (7, 10)
Cluster 0 sametotal shots = 29240
Cluster 1 sametotal shots = 29240
Case (8, 10)
Cluster 0 sametotal shots = 29240
Cluster 1 sametotal shots = 29240
Case (9, 10)
Cluster 0 sametotal shots = 29240
Cluster 1 sametotal shots = 29240
******************** Submitting jobs ********************
Submitting job 1/3 5e1957a185cda40012e2b357 --> 801 circuits, 900 * 8192 shots
Submitting job 2/3 5e195827d565fc00129a985f --> 765 circuits, 900 * 8192 shots
Submitting job 3/3 5e19586da0ce000011bd9c32 --> 360 circuits, 828 * 8192 shots
/home/weit/anaconda3/envs/cc-env/lib/python3.7/site-packages/qiskit/providers/models/backendconfiguration.py:337: UserWarning: `dt` and `dtm` now have units of seconds(s) rather than nanoseconds(ns).
  warnings.warn('`dt` and `dtm` now have units of seconds(s) rather '
******************** Submitting jobs ********************
Submitting job 1/3 5e195917524c480011587197 --> 900 circuits, 900 * 8192 shots
Submitting job 2/3 5e1959aea0ce000011bd9c39 --> 900 circuits, 900 * 8192 shots
Submitting job 3/3 5e1959f7d565fc00129a986c --> 424 circuits, 424 * 8192 shots
******************** Retrieving jobs ********************
Retrieving job 1/3 5e1957a185cda40012e2b357 --> 801 circuits, 900 * 8192 shots
Retrieving job 2/3 5e195827d565fc00129a985f --> 765 circuits, 900 * 8192 shots
Retrieving job 3/3 5e19586da0ce000011bd9c32 --> 360 circuits, 828 * 8192 shots
******************** Retrieving jobs ********************
Retrieving job 1/3 5e195917524c480011587197 --> 900 circuits, 900 * 8192 shots
Retrieving job 2/3 5e1959aea0ce000011bd9c39 --> 900 circuits, 900 * 8192 shots
Retrieving job 3/3 5e1959f7d565fc00129a986c --> 424 circuits, 424 * 8192 shots
Computing calibration matrix for 2 qubit circuit took 2.015e-04 seconds
Computing calibration matrix for 2 qubit circuit took 5.364e-05 seconds
Computing calibration matrix for 3 qubit circuit took 1.261e-04 seconds
Computing calibration matrix for 3 qubit circuit took 1.209e-04 seconds
Computing calibration matrix for 3 qubit circuit took 1.178e-04 seconds
Computing calibration matrix for 3 qubit circuit took 1.175e-04 seconds
Computing calibration matrix for 2 qubit circuit took 4.697e-05 seconds
Computing calibration matrix for 4 qubit circuit took 4.992e-04 seconds
Computing calibration matrix for 4 qubit circuit took 4.232e-04 seconds
Computing calibration matrix for 4 qubit circuit took 4.208e-04 seconds
Computing calibration matrix for 2 qubit circuit took 4.792e-05 seconds
Computing calibration matrix for 3 qubit circuit took 1.283e-04 seconds
Computing calibration matrix for 5 qubit circuit took 1.754e-03 seconds
Computing calibration matrix for 4 qubit circuit took 4.339e-04 seconds
Computing calibration matrix for 4 qubit circuit took 4.222e-04 seconds
Computing calibration matrix for 3 qubit circuit took 1.349e-04 seconds
Computing calibration matrix for 5 qubit circuit took 1.713e-03 seconds
Computing calibration matrix for 2 qubit circuit took 6.080e-05 seconds
Computing calibration matrix for 6 qubit circuit took 7.391e-03 seconds
Computing calibration matrix for 4 qubit circuit took 4.346e-04 seconds
Computing calibration matrix for 4 qubit circuit took 4.239e-04 seconds
Computing calibration matrix for 4 qubit circuit took 4.177e-04 seconds
Computing calibration matrix for 5 qubit circuit took 1.723e-03 seconds
Computing calibration matrix for 5 qubit circuit took 1.709e-03 seconds
Computing calibration matrix for 2 qubit circuit took 4.935e-05 seconds
Computing calibration matrix for 6 qubit circuit took 7.508e-03 seconds
Computing calibration matrix for 4 qubit circuit took 4.280e-04 seconds
Computing calibration matrix for 7 qubit circuit took 3.185e-02 seconds
Computing calibration matrix for 3 qubit circuit took 1.273e-04 seconds
Computing calibration matrix for 5 qubit circuit took 1.760e-03 seconds
Computing calibration matrix for 4 qubit circuit took 4.268e-04 seconds
Computing calibration matrix for 5 qubit circuit took 1.722e-03 seconds
Computing calibration matrix for 6 qubit circuit took 7.496e-03 seconds
Computing calibration matrix for 6 qubit circuit took 7.385e-03 seconds
Computing calibration matrix for 7 qubit circuit took 3.241e-02 seconds
Computing calibration matrix for 5 qubit circuit took 1.719e-03 seconds
Computing calibration matrix for 8 qubit circuit took 1.395e-01 seconds
Computing calibration matrix for 3 qubit circuit took 3.281e-04 seconds
Computing calibration matrix for 4 qubit circuit took 4.294e-04 seconds
Computing calibration matrix for 5 qubit circuit took 1.759e-03 seconds
Computing calibration matrix for 5 qubit circuit took 1.766e-03 seconds
Computing calibration matrix for 6 qubit circuit took 7.471e-03 seconds
Computing calibration matrix for 6 qubit circuit took 7.581e-03 seconds
Computing calibration matrix for 6 qubit circuit took 7.509e-03 seconds
Computing calibration matrix for 6 qubit circuit took 7.528e-03 seconds
Computing calibration matrix for 6 qubit circuit took 7.497e-03 seconds
Computing calibration matrix for 6 qubit circuit took 7.485e-03 seconds
Computing calibration matrix for 9 qubit circuit took 5.934e-01 seconds
Computing calibration matrix for 3 qubit circuit took 2.084e-04 seconds
-------------------------------------------------- Reconstructor --------------------------------------------------
Existing cases: dict_keys([])
case (2, 3)
Cut into  [2, 2] clusters
qasm ΔH = 3.466e-04
hw ΔH = 3.033e-02
cutting ΔH = 2.066e-02
mitigated_cutting ΔH = 1.668e-02
Reconstruction output has 1 cases
----------------------------------------------------------------------------------------------------
case (3, 4)
Cut into  [3, 3] clusters
qasm ΔH = 7.191e-04
hw ΔH = 1.109e-01
cutting ΔH = 4.796e-02
mitigated_cutting ΔH = 1.063e-01
Reconstruction output has 2 cases
----------------------------------------------------------------------------------------------------
case (3, 5)
Cut into  [3, 3] clusters
qasm ΔH = 6.272e-04
hw ΔH = 4.235e-02
cutting ΔH = 2.414e-02
mitigated_cutting ΔH = 3.590e-02
Reconstruction output has 3 cases
----------------------------------------------------------------------------------------------------
case (4, 5)
Cut into  [2, 4] clusters
qasm ΔH = 6.272e-04
hw ΔH = 4.235e-02
cutting ΔH = 6.426e-01
mitigated_cutting ΔH = 7.401e-01
Reconstruction output has 4 cases
----------------------------------------------------------------------------------------------------
case (4, 6)
Cut into  [4, 4, 2] clusters
qasm ΔH = 7.418e-04
hw ΔH = 2.230e-01
cutting ΔH = 4.995e-01
mitigated_cutting ΔH = 4.899e-01
Reconstruction output has 5 cases
----------------------------------------------------------------------------------------------------
case (5, 6)
Cut into  [3, 5] clusters
qasm ΔH = 7.418e-04
hw ΔH = 2.230e-01
cutting ΔH = 4.987e-01
mitigated_cutting ΔH = 4.781e-01
Reconstruction output has 6 cases
----------------------------------------------------------------------------------------------------
case (4, 7)
Cut into  [4, 4] clusters
qasm ΔH = 1.172e-03
hw ΔH = 4.354e-01
cutting ΔH = 2.349e-01
mitigated_cutting ΔH = 3.211e-01
Reconstruction output has 7 cases
----------------------------------------------------------------------------------------------------
case (5, 7)
Cut into  [3, 5] clusters
qasm ΔH = 1.172e-03
hw ΔH = 4.354e-01
cutting ΔH = 5.618e-01
mitigated_cutting ΔH = 5.318e-01
Reconstruction output has 8 cases
----------------------------------------------------------------------------------------------------
case (6, 7)
Cut into  [2, 6] clusters
qasm ΔH = 1.172e-03
hw ΔH = 4.354e-01
cutting ΔH = 4.423e-01
mitigated_cutting ΔH = 4.121e-01
Reconstruction output has 9 cases
----------------------------------------------------------------------------------------------------
case (4, 8)
Cut into  [4, 4, 4] clusters
qasm ΔH = 9.301e-04
hw ΔH = 3.418e-01
cutting ΔH = 3.757e-01
mitigated_cutting ΔH = 4.769e-01
Reconstruction output has 10 cases
----------------------------------------------------------------------------------------------------
case (5, 8)
Cut into  [5, 5, 2] clusters
qasm ΔH = 9.301e-04
hw ΔH = 3.418e-01
cutting ΔH = 3.738e-01
mitigated_cutting ΔH = 4.517e-01
Reconstruction output has 11 cases
----------------------------------------------------------------------------------------------------
case (6, 8)
Cut into  [6, 4] clusters
qasm ΔH = 9.301e-04
hw ΔH = 3.418e-01
cutting ΔH = 4.713e-01
mitigated_cutting ΔH = 5.681e-01
Reconstruction output has 12 cases
----------------------------------------------------------------------------------------------------
case (7, 8)
Cut into  [7, 3] clusters
qasm ΔH = 9.301e-04
hw ΔH = 3.418e-01
cutting ΔH = 3.558e-01
mitigated_cutting ΔH = 4.079e-01
Reconstruction output has 13 cases
----------------------------------------------------------------------------------------------------
case (5, 9)
Cut into  [5, 4, 5] clusters
qasm ΔH = 8.831e-04
hw ΔH = 4.120e-01
cutting ΔH = 3.434e-01
mitigated_cutting ΔH = 4.399e-01
Reconstruction output has 14 cases
----------------------------------------------------------------------------------------------------
case (6, 9)
Cut into  [6, 6] clusters
qasm ΔH = 8.831e-04
hw ΔH = 4.120e-01
cutting ΔH = 3.842e-01
mitigated_cutting ΔH = 4.117e-01
Reconstruction output has 15 cases
----------------------------------------------------------------------------------------------------
case (7, 9)
Cut into  [7, 5] clusters
qasm ΔH = 8.831e-04
hw ΔH = 4.120e-01
cutting ΔH = 3.405e-01
mitigated_cutting ΔH = 3.786e-01
Reconstruction output has 16 cases
----------------------------------------------------------------------------------------------------
case (8, 9)
Cut into  [8, 3] clusters
qasm ΔH = 8.831e-04
hw ΔH = 4.120e-01
cutting ΔH = 3.922e-01
mitigated_cutting ΔH = 4.569e-01
Reconstruction output has 17 cases
----------------------------------------------------------------------------------------------------
case (5, 10)
Cut into  [4, 5, 5] clusters
qasm ΔH = 1.204e-03
hw ΔH = 5.978e-01
cutting ΔH = 5.295e-01
mitigated_cutting ΔH = 5.920e-01
Reconstruction output has 18 cases
----------------------------------------------------------------------------------------------------
case (6, 10)
Cut into  [6, 6] clusters
qasm ΔH = 1.204e-03
hw ΔH = 5.978e-01
cutting ΔH = 5.078e-01
mitigated_cutting ΔH = 5.370e-01
Reconstruction output has 19 cases
----------------------------------------------------------------------------------------------------
case (7, 10)
Cut into  [6, 6] clusters
qasm ΔH = 1.204e-03
hw ΔH = 5.978e-01
cutting ΔH = 4.762e-01
mitigated_cutting ΔH = 5.012e-01
Reconstruction output has 20 cases
----------------------------------------------------------------------------------------------------
case (8, 10)
Cut into  [6, 6] clusters
qasm ΔH = 1.204e-03
hw ΔH = 5.978e-01
cutting ΔH = 4.831e-01
mitigated_cutting ΔH = 5.292e-01
Reconstruction output has 21 cases
----------------------------------------------------------------------------------------------------
case (9, 10)
Cut into  [9, 3] clusters
qasm ΔH = 1.204e-03
hw ΔH = 5.978e-01
cutting ΔH = 5.021e-01
mitigated_cutting ΔH = 5.674e-01
Reconstruction output has 22 cases
----------------------------------------------------------------------------------------------------
-------------------------------------------------- Plot --------------------------------------------------
Processing ./hardware/benchmark_data/supremacy_ibmq_boeblingen/hw_plotter_input_ibmq_boeblingen_saturated.p
************************* Best Cases *************************
**************************************************
Processing ./hardware/benchmark_data/supremacy_ibmq_boeblingen/hw_plotter_input_ibmq_boeblingen_sametotal.p
case (2, 3): ce percentage reduction = 7.654, fidelity improvement = -0.000, reconstruction time: 5.815e-04
case (3, 4): ce percentage reduction = -1.905, fidelity improvement = 0.000, reconstruction time: 1.760e-03
case (3, 5): ce percentage reduction = -43.860, fidelity improvement = 0.000, reconstruction time: 5.229e-04
case (4, 5): ce percentage reduction = -2865.513, fidelity improvement = 0.000, reconstruction time: 5.314e-04
case (4, 6): ce percentage reduction = -111.659, fidelity improvement = 0.000, reconstruction time: 3.232e-02
case (5, 6): ce percentage reduction = -106.539, fidelity improvement = -0.000, reconstruction time: 2.320e-03
case (4, 7): ce percentage reduction = 28.128, fidelity improvement = 0.000, reconstruction time: 8.633e-04
case (5, 7): ce percentage reduction = -19.027, fidelity improvement = -0.000, reconstruction time: 8.759e-04
case (6, 7): ce percentage reduction = 7.768, fidelity improvement = 0.000, reconstruction time: 9.992e-04
case (4, 8): ce percentage reduction = -34.197, fidelity improvement = 0.000, reconstruction time: 3.727e-02
case (5, 8): ce percentage reduction = -27.097, fidelity improvement = 0.000, reconstruction time: 4.243e-02
case (6, 8): ce percentage reduction = -59.846, fidelity improvement = 0.000, reconstruction time: 3.868e-03
case (7, 8): ce percentage reduction = -14.778, fidelity improvement = 0.000, reconstruction time: 5.051e-03
case (5, 9): ce percentage reduction = -1.959, fidelity improvement = 0.000, reconstruction time: 2.069e-01
case (6, 9): ce percentage reduction = 4.563, fidelity improvement = -0.000, reconstruction time: 1.888e-02
case (7, 9): ce percentage reduction = 12.256, fidelity improvement = 0.000, reconstruction time: 2.032e-02
case (8, 9): ce percentage reduction = -5.910, fidelity improvement = 0.000, reconstruction time: 7.015e-03
case (5, 10): ce percentage reduction = 0.977, fidelity improvement = 0.000, reconstruction time: 5.462e-02
case (6, 10): ce percentage reduction = 10.180, fidelity improvement = -0.000, reconstruction time: 7.249e-03
case (7, 10): ce percentage reduction = 16.157, fidelity improvement = -0.000, reconstruction time: 7.123e-03
case (8, 10): ce percentage reduction = 11.471, fidelity improvement = 0.000, reconstruction time: 7.161e-03
case (9, 10): ce percentage reduction = 5.093, fidelity improvement = -0.000, reconstruction time: 1.568e-02
************************* Best Cases *************************
{'ce_percent': 7.654347188593996, 'reconstructor_time': 0.0005815029144287109, 'best_case': (2, 3), 'hw_ce': 0.018065078782629806, 'cutting_ce': 0.01668231493271429}
{'ce_percent': -1.9054911850337097, 'reconstructor_time': 0.0017600059509277344, 'best_case': (3, 4), 'hw_ce': 0.10427062652756254, 'cutting_ce': 0.10625749412462467}
{'ce_percent': -43.86008172490012, 'reconstructor_time': 0.0005228519439697266, 'best_case': (3, 5), 'hw_ce': 0.02495570433852277, 'cutting_ce': 0.035901296656423304}
{'ce_percent': -106.53893985534903, 'reconstructor_time': 0.002319812774658203, 'best_case': (5, 6), 'hw_ce': 0.23145983319407323, 'cutting_ce': 0.4780546856699981}
{'ce_percent': 28.12754762002377, 'reconstructor_time': 0.0008633136749267578, 'best_case': (4, 7), 'hw_ce': 0.4468084420983711, 'cutting_ce': 0.32113218477686545}
{'ce_percent': -14.77849390358728, 'reconstructor_time': 0.005051136016845703, 'best_case': (7, 8), 'hw_ce': 0.35538125282557426, 'cutting_ce': 0.40790124960889385}
{'ce_percent': 12.256218564187323, 'reconstructor_time': 0.020315170288085938, 'best_case': (7, 9), 'hw_ce': 0.43142785194390676, 'cutting_ce': 0.37855111146288306}
{'ce_percent': 16.15679698487835, 'reconstructor_time': 0.00712275505065918, 'best_case': (7, 10), 'hw_ce': 0.5978095883854257, 'cutting_ce': 0.5012227068338556}
**************************************************
----------------------------------------------------------------------------------------------------
Processing ./hardware/benchmark_data/supremacy_ibmq_boeblingen/hw_plotter_input_ibmq_boeblingen_saturated.p
************************* Best Cases *************************
**************************************************
Processing ./hardware/benchmark_data/supremacy_ibmq_boeblingen/hw_plotter_input_ibmq_boeblingen_sametotal.p
case (2, 3): ce percentage reduction = 31.880, fidelity improvement = 0.000, reconstruction time: 5.815e-04
case (3, 4): ce percentage reduction = 56.773, fidelity improvement = -0.000, reconstruction time: 1.760e-03
case (3, 5): ce percentage reduction = 42.993, fidelity improvement = 0.000, reconstruction time: 5.229e-04
case (4, 5): ce percentage reduction = -1417.396, fidelity improvement = 0.000, reconstruction time: 5.314e-04
case (4, 6): ce percentage reduction = -123.988, fidelity improvement = -0.000, reconstruction time: 3.232e-02
case (5, 6): ce percentage reduction = -123.625, fidelity improvement = 0.000, reconstruction time: 2.320e-03
case (4, 7): ce percentage reduction = 46.040, fidelity improvement = 0.000, reconstruction time: 8.633e-04
case (5, 7): ce percentage reduction = -29.046, fidelity improvement = 0.000, reconstruction time: 8.759e-04
case (6, 7): ce percentage reduction = -1.586, fidelity improvement = -0.000, reconstruction time: 9.992e-04
case (4, 8): ce percentage reduction = -9.916, fidelity improvement = 0.000, reconstruction time: 3.727e-02
case (5, 8): ce percentage reduction = -9.364, fidelity improvement = -0.000, reconstruction time: 4.243e-02
case (6, 8): ce percentage reduction = -37.892, fidelity improvement = 0.000, reconstruction time: 3.868e-03
case (7, 8): ce percentage reduction = -4.101, fidelity improvement = 0.000, reconstruction time: 5.051e-03
case (5, 9): ce percentage reduction = 16.656, fidelity improvement = -0.000, reconstruction time: 2.069e-01
case (6, 9): ce percentage reduction = 6.747, fidelity improvement = 0.000, reconstruction time: 1.888e-02
case (7, 9): ce percentage reduction = 17.348, fidelity improvement = 0.000, reconstruction time: 2.032e-02
case (8, 9): ce percentage reduction = 4.799, fidelity improvement = 0.000, reconstruction time: 7.015e-03
case (5, 10): ce percentage reduction = 11.430, fidelity improvement = -0.000, reconstruction time: 5.462e-02
case (6, 10): ce percentage reduction = 15.059, fidelity improvement = 0.000, reconstruction time: 7.249e-03
case (7, 10): ce percentage reduction = 20.348, fidelity improvement = -0.000, reconstruction time: 7.123e-03
case (8, 10): ce percentage reduction = 19.192, fidelity improvement = -0.000, reconstruction time: 7.161e-03
case (9, 10): ce percentage reduction = 16.010, fidelity improvement = -0.000, reconstruction time: 1.568e-02
************************* Best Cases *************************
{'ce_percent': 31.880444984989857, 'reconstructor_time': 0.0005815029144287109, 'best_case': (2, 3), 'hw_ce': 0.030333743936239235, 'cutting_ce': 0.02066321138875879}
{'ce_percent': 56.7725788762025, 'reconstructor_time': 0.0017600059509277344, 'best_case': (3, 4), 'hw_ce': 0.11093750185333077, 'cutting_ce': 0.04795542111035994}
{'ce_percent': 42.992822738571284, 'reconstructor_time': 0.0005228519439697266, 'best_case': (3, 5), 'hw_ce': 0.04235110023038763, 'cutting_ce': 0.02414316678050242}
{'ce_percent': -123.62490711592477, 'reconstructor_time': 0.002319812774658203, 'best_case': (5, 6), 'hw_ce': 0.22301335691794252, 'cutting_ce': 0.4987134122638548}
{'ce_percent': 46.03980860131224, 'reconstructor_time': 0.0008633136749267578, 'best_case': (4, 7), 'hw_ce': 0.4353678820394115, 'cutting_ce': 0.2349253424368796}
{'ce_percent': -4.101378778721193, 'reconstructor_time': 0.005051136016845703, 'best_case': (7, 8), 'hw_ce': 0.34176595205472726, 'cutting_ce': 0.3557830682851943}
{'ce_percent': 17.347798375422197, 'reconstructor_time': 0.020315170288085938, 'best_case': (7, 9), 'hw_ce': 0.41201253234972623, 'cutting_ce': 0.3405374289562246}/home/weit/circuit_cutting/hardware/plot.py:39: UserWarning: Attempting to set identical left == right == -0.5 results in singular transformations; automatically expanding.
  im = ax.imshow(data, **kwargs)
/home/weit/circuit_cutting/hardware/plot.py:39: UserWarning: Attempting to set identical bottom == top == -0.5 results in singular transformations; automatically expanding.
  im = ax.imshow(data, **kwargs)

{'ce_percent': 20.34832608326586, 'reconstructor_time': 0.00712275505065918, 'best_case': (7, 10), 'hw_ce': 0.5978095883854257, 'cutting_ce': 0.4761653439837299}
**************************************************
----------------------------------------------------------------------------------------------------
