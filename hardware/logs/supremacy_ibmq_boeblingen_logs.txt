-------------------------------------------------- Generator --------------------------------------------------
Existing cases: dict_keys([])
Generating 1x5, 1+8+1 supremacy circuit
Case (2, 5) impossible, skipped
----------------------------------------------------------------------------------------------------
Case (5, 5) impossible, skipped
----------------------------------------------------------------------------------------------------
Case (9, 5) impossible, skipped
----------------------------------------------------------------------------------------------------
Generating 3x3, 1+8+1 supremacy circuit
Case (2, 9) impossible, skipped
----------------------------------------------------------------------------------------------------
Using license file /home/weit/gurobi.lic
Academic license - for non-commercial use only
********************
MIQCP stats:
5 cuts, 3 clusters, max qubit = 5
cluster 0: original input = 3.00, ρ_qubits = 2.00, O_qubits = 1.00, d = 5.00
cluster 1: original input = 2.00, ρ_qubits = 2.00, O_qubits = 1.00, d = 4.00
cluster 2: original input = 4.00, ρ_qubits = 1.00, O_qubits = 3.00, d = 5.00
objective value = 3.781e+02
manually calculated objective value: 3.780e+02
evaluator_cost = 378, reconstructor_cost = 2.641e-03, reconstructor_weight = 0.000e+00
runtime: 0.23973703384399414
OPTIMAL
********************
Adding case (5, 9) to run
Adding 9 qubit full circuit to run
9 qubit circuit saturated shots = 258048, ΔH = 1.017e-03
----------------------------------------------------------------------------------------------------
Case (9, 9) impossible, skipped
----------------------------------------------------------------------------------------------------
Generating 4x3, 1+8+1 supremacy circuit
Case (2, 12) impossible, skipped
----------------------------------------------------------------------------------------------------
Case (5, 12) NOT feasible
----------------------------------------------------------------------------------------------------
********************
MIQCP stats:
3 cuts, 2 clusters, max qubit = 9
cluster 0: original input = 6.00, ρ_qubits = 2.00, O_qubits = 1.00, d = 8.00
cluster 1: original input = 6.00, ρ_qubits = 1.00, O_qubits = 2.00, d = 7.00
objective value = 1.621e+02
manually calculated objective value: 1.620e+02
evaluator_cost = 162, reconstructor_cost = 1.032e-03, reconstructor_weight = 0.000e+00
runtime: 0.16248583793640137
OPTIMAL
********************
Adding case (9, 12) to run
Adding 12 qubit full circuit to run
12 qubit circuit saturated shots = 2655232, ΔH = 1.024e-03
----------------------------------------------------------------------------------------------------
Generating 3x5, 1+8+1 supremacy circuit
Case (2, 15) impossible, skipped
----------------------------------------------------------------------------------------------------
Case (5, 15) impossible, skipped
----------------------------------------------------------------------------------------------------
********************
MIQCP stats:
3 cuts, 2 clusters, max qubit = 9
cluster 0: original input = 8.00, ρ_qubits = 1.00, O_qubits = 2.00, d = 9.00
cluster 1: original input = 7.00, ρ_qubits = 2.00, O_qubits = 1.00, d = 9.00
objective value = 1.621e+02
manually calculated objective value: 1.620e+02
evaluator_cost = 162, reconstructor_cost = 8.090e-03, reconstructor_weight = 0.000e+00
runtime: 0.1625521183013916
OPTIMAL
********************
Adding case (9, 15) to run
Adding 15 qubit full circuit to run
15 qubit circuit saturated shots = 4916224, ΔH = 4.716e-03
----------------------------------------------------------------------------------------------------
3 cases, 3 full circuits to run : dict_keys([(5, 9), (9, 12), (9, 15)])
******************** Submitting jobs ********************
Submitting job 1/2 3e9f4cca-3c9e-4822-a0f8-6fa6bbd338bd --> 3 circuits, 900 * 8192 shots
Submitting job 2/2 6712f2ad-e021-46e6-a66a-7cd37ef455b6 --> 1 circuits, 58 * 8192 shots
/home/weit/anaconda3/envs/cc-env/lib/python3.7/site-packages/qiskit/providers/models/backendconfiguration.py:337: UserWarning: `dt` and `dtm` now have units of seconds(s) rather than nanoseconds(ns).
  warnings.warn('`dt` and `dtm` now have units of seconds(s) rather '
******************** Submitting jobs ********************
Submitting job 1/1 7e00755f-3f9e-4783-9120-0c5b4b0ae5ec --> 512 circuits, 512 * 8192 shots
******************** Retrieving jobs ********************
Retrieving job 1/2 3e9f4cca-3c9e-4822-a0f8-6fa6bbd338bd --> 3 circuits, 900 * 8192 shots
Retrieving job 2/2 6712f2ad-e021-46e6-a66a-7cd37ef455b6 --> 1 circuits, 58 * 8192 shots
******************** Retrieving jobs ********************
Retrieving job 1/1 7e00755f-3f9e-4783-9120-0c5b4b0ae5ec --> 512 circuits, 512 * 8192 shots
Traceback (most recent call last):
  File "/home/weit/anaconda3/envs/cc-env/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/weit/anaconda3/envs/cc-env/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/weit/circuit_cutting/hardware/generator.py", line 99, in <module>
    case_dict = {'full_circ':circ_dict[case[1]]['circ'],'fc_shots':circ_dict[case[1]]['shots'],
KeyError: 12
Computing calibration matrix for 9 qubit circuit took 6.066e-01 seconds
-------------------------------------------------- Job Submittor --------------------------------------------------
Existing cases: dict_keys([])
Run cases: dict_keys([(5, 9)])
**************************************************
Case (5, 9)
5 qubit circuit saturated shots = 19456, ΔH = 9.701e-04
Cluster 0 saturated shots = 19456
4 qubit circuit saturated shots = 6144, ΔH = 9.527e-04
Cluster 1 saturated shots = 6144
5 qubit circuit saturated shots = 7168, ΔH = 9.701e-04
Cluster 2 saturated shots = 7168
******************** Submitting jobs ********************
Submitting job 1/1 86a30b23-32f7-45f7-9545-f54e808092a7 --> 378 circuits, 594 * 8192 shots
/home/weit/anaconda3/envs/cc-env/lib/python3.7/site-packages/qiskit/providers/models/backendconfiguration.py:337: UserWarning: `dt` and `dtm` now have units of seconds(s) rather than nanoseconds(ns).
  warnings.warn('`dt` and `dtm` now have units of seconds(s) rather '
******************** Submitting jobs ********************
-------------------------------------------------- Reconstructor --------------------------------------------------
Existing cases: dict_keys([])
