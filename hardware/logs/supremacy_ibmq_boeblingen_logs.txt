-------------------------------------------------- Generator --------------------------------------------------
Existing cases: dict_keys([])
Generating 1x5, 1+8+1 supremacy circuit
Using license file /home/weit/gurobi.lic
Academic license - for non-commercial use only
********************
MIQCP stats:
1 cuts, 2 clusters, max qubit = 4
cluster 0: original input = 2.00, ρ_qubits = -0.00, O_qubits = 1.00, d = 2.00
cluster 1: original input = 3.00, ρ_qubits = 1.00, O_qubits = -0.00, d = 4.00
objective value = 9.001e+00
manually calculated objective value: 9.000e+00
evaluator_cost = 9, reconstructor_cost = 5.288e-07, reconstructor_weight = 0.000e+00
runtime: 0.02866506576538086
OPTIMAL
********************
Adding case (4, 5) to run
Adding 5 qubit full circuit to run
5 qubit circuit saturated shots = 15360, ΔH = 9.520e-04
----------------------------------------------------------------------------------------------------
Case (9, 5) impossible, skipped
----------------------------------------------------------------------------------------------------
Generating 4x3, 1+8+1 supremacy circuit
Case (4, 12) impossible, skipped
----------------------------------------------------------------------------------------------------
********************
MIQCP stats:
3 cuts, 2 clusters, max qubit = 9
cluster 0: original input = 6.00, ρ_qubits = 2.00, O_qubits = 1.00, d = 8.00
cluster 1: original input = 6.00, ρ_qubits = 1.00, O_qubits = 2.00, d = 7.00
objective value = 1.621e+02
manually calculated objective value: 1.620e+02
evaluator_cost = 162, reconstructor_cost = 1.032e-03, reconstructor_weight = 0.000e+00
runtime: 0.18806791305541992
OPTIMAL
********************
Adding case (9, 12) to run
Adding 12 qubit full circuit to run
12 qubit circuit saturated shots = 2052096, ΔH = 1.024e-03
----------------------------------------------------------------------------------------------------
2 cases, 2 full circuits to run : dict_keys([(4, 5), (9, 12)])
******************** Submitting jobs ********************
Submitting job 1/1 30afb66c-ecfa-4f86-bfd8-18acbefed239 --> 2 circuits, 253 * 8192 shots
/home/weit/anaconda3/envs/cc-env/lib/python3.7/site-packages/qiskit/providers/models/backendconfiguration.py:337: UserWarning: `dt` and `dtm` now have units of seconds(s) rather than nanoseconds(ns).
  warnings.warn('`dt` and `dtm` now have units of seconds(s) rather '
******************** Submitting jobs ********************
Submitting job 1/1 da19fa08-c993-47e3-8277-25c3e5032144 --> 32 circuits, 32 * 8192 shots
******************** Retrieving jobs ********************
Retrieving job 1/1 30afb66c-ecfa-4f86-bfd8-18acbefed239 --> 2 circuits, 253 * 8192 shots
******************** Retrieving jobs ********************
Retrieving job 1/1 da19fa08-c993-47e3-8277-25c3e5032144 --> 32 circuits, 32 * 8192 shots
Computing calibration matrix for 5 qubit circuit took 1.838e-03 seconds
-------------------------------------------------- Job Submittor --------------------------------------------------
Existing cases: dict_keys([])
Run cases: dict_keys([(4, 5), (9, 12)])
**************************************************
Case (4, 5)
2 qubit circuit saturated shots = 5120, ΔH = 4.686e-04
Cluster 0 saturated shots = 5120
4 qubit circuit saturated shots = 6144, ΔH = 7.228e-04
Cluster 1 saturated shots = 6144
Case (9, 12)
8 qubit circuit saturated shots = 124928, ΔH = 1.009e-03
Cluster 0 saturated shots = 124928
7 qubit circuit saturated shots = 64512, ΔH = 9.989e-04
Cluster 1 saturated shots = 64512
******************** Submitting jobs ********************
Submitting job 1/3 6a9f6d73-bfa5-48a5-9d44-d161151e92cd --> 65 circuits, 900 * 8192 shots
Submitting job 2/3 086a5289-2097-4469-a0a3-b2408378aeed --> 61 circuits, 900 * 8192 shots
Submitting job 3/3 6544f50c-3a36-4288-89ac-57d6861546f4 --> 47 circuits, 369 * 8192 shots
/home/weit/anaconda3/envs/cc-env/lib/python3.7/site-packages/qiskit/providers/models/backendconfiguration.py:337: UserWarning: `dt` and `dtm` now have units of seconds(s) rather than nanoseconds(ns).
  warnings.warn('`dt` and `dtm` now have units of seconds(s) rather '
******************** Submitting jobs ********************
Submitting job 1/1 63fe66f1-20aa-485e-a7ea-84575845c511 --> 404 circuits, 404 * 8192 shots
******************** Retrieving jobs ********************
Retrieving job 1/3 6a9f6d73-bfa5-48a5-9d44-d161151e92cd --> 65 circuits, 900 * 8192 shots
Retrieving job 2/3 086a5289-2097-4469-a0a3-b2408378aeed --> 61 circuits, 900 * 8192 shots
Retrieving job 3/3 6544f50c-3a36-4288-89ac-57d6861546f4 --> 47 circuits, 369 * 8192 shots
******************** Retrieving jobs ********************
Retrieving job 1/1 63fe66f1-20aa-485e-a7ea-84575845c511 --> 404 circuits, 404 * 8192 shots
Computing calibration matrix for 2 qubit circuit took 1.485e-04 seconds
Computing calibration matrix for 4 qubit circuit took 4.203e-04 seconds
Computing calibration matrix for 8 qubit circuit took 1.380e-01 seconds
Computing calibration matrix for 7 qubit circuit took 3.150e-02 seconds
-------------------------------------------------- Reconstructor --------------------------------------------------
Existing cases: dict_keys([])
case (4, 5)
Cut into  [2, 4] clusters
qasm ΔH = 6.189e-04
hw ΔH = 1.014e-03
cutting ΔH = 4.692e-03
mitigated_cutting ΔH = 4.692e-03
Reconstruction output has 1 cases
----------------------------------------------------------------------------------------------------
case (9, 12)
Cut into  [8, 7] clusters
qasm ΔH = 1.126e-03
hw ΔH = 1.336e-03
cutting ΔH = 5.446e-03
mitigated_cutting ΔH = 5.446e-03
Reconstruction output has 2 cases
----------------------------------------------------------------------------------------------------
-------------------------------------------------- Job Submittor --------------------------------------------------
Existing cases: dict_keys([])
Run cases: dict_keys([(4, 5), (9, 12)])
**************************************************
Case (4, 5)
Cluster 0 sametotal shots = 5120
Cluster 1 sametotal shots = 2560
Case (9, 12)
Cluster 0 sametotal shots = 19000
Cluster 1 sametotal shots = 38001
******************** Submitting jobs ********************
Submitting job 1/1 75f80a50-6ff5-4a72-9b5d-667da311c203 --> 171 circuits, 603 * 8192 shots
/home/weit/anaconda3/envs/cc-env/lib/python3.7/site-packages/qiskit/providers/models/backendconfiguration.py:337: UserWarning: `dt` and `dtm` now have units of seconds(s) rather than nanoseconds(ns).
  warnings.warn('`dt` and `dtm` now have units of seconds(s) rather '
******************** Submitting jobs ********************
Submitting job 1/1 0048a720-9ac4-43cb-8d98-5bc810d40272 --> 404 circuits, 404 * 8192 shots
******************** Retrieving jobs ********************
Retrieving job 1/1 75f80a50-6ff5-4a72-9b5d-667da311c203 --> 171 circuits, 603 * 8192 shots
******************** Retrieving jobs ********************
Retrieving job 1/1 0048a720-9ac4-43cb-8d98-5bc810d40272 --> 404 circuits, 404 * 8192 shots
Computing calibration matrix for 2 qubit circuit took 2.966e-04 seconds
Computing calibration matrix for 4 qubit circuit took 4.385e-04 seconds
Computing calibration matrix for 8 qubit circuit took 1.349e-01 seconds
Computing calibration matrix for 7 qubit circuit took 3.151e-02 seconds
-------------------------------------------------- Reconstructor --------------------------------------------------
Existing cases: dict_keys([])
case (4, 5)
Cut into  [2, 4] clusters
qasm ΔH = 6.189e-04
hw ΔH = 1.014e-03
cutting ΔH = 3.924e-03
mitigated_cutting ΔH = 3.924e-03
Reconstruction output has 1 cases
----------------------------------------------------------------------------------------------------
case (9, 12)
Cut into  [8, 7] clusters
qasm ΔH = 1.126e-03
hw ΔH = 1.336e-03
cutting ΔH = 1.996e-02
mitigated_cutting ΔH = 1.996e-02
Reconstruction output has 2 cases
----------------------------------------------------------------------------------------------------
-------------------------------------------------- Plot --------------------------------------------------
Processing ./hardware/benchmark_data/supremacy_ibmq_boeblingen/hw_plotter_input_ibmq_boeblingen_saturated.p
case (4, 5): ce percentage reduction = -362.680, fidelity improvement = 0.000, reconstruction time: 6.261e-04
case (9, 12): ce percentage reduction = -307.473, fidelity improvement = -0.000, reconstruction time: 5.852e-02
************************* Best Cases *************************
{'ce_percent': -362.680492292011, 'reconstructor_time': 0.0006260871887207031, 'best_case': (4, 5), 'hw_ce': 0.0010141984482090463, 'cutting_ce': 0.0046924983729915515}
{'ce_percent': -307.4733353198565, 'reconstructor_time': 0.0585169792175293, 'best_case': (9, 12), 'hw_ce': 0.001336445593231441, 'cutting_ce': 0.005445659433475396}
**************************************************
Processing ./hardware/benchmark_data/supremacy_ibmq_boeblingen/hw_plotter_input_ibmq_boeblingen_sametotal.p
case (4, 5): ce percentage reduction = -286.877, fidelity improvement = 0.000, reconstruction time: 6.704e-04
case (9, 12): ce percentage reduction = -1393.857, fidelity improvement = -0.000, reconstruction time: 5.845e-02
************************* Best Cases *************************
{'ce_percent': -286.87710254631617, 'reconstructor_time': 0.0006704330444335938, 'best_case': (4, 5), 'hw_ce': 0.0010141984482090463, 'cutting_ce': 0.003923701570500859}
{'ce_percent': -1393.8568736428929, 'reconstructor_time': 0.05845475196838379, 'best_case': (9, 12), 'hw_ce': 0.001336445593231441, 'cutting_ce': 0.01996458435698542}
**************************************************
----------------------------------------------------------------------------------------------------
Processing ./hardware/benchmark_data/supremacy_ibmq_boeblingen/hw_plotter_input_ibmq_boeblingen_saturated.p
case (4, 5): ce percentage reduction = -362.680, fidelity improvement = 0.000, reconstruction time: 6.261e-04
case (9, 12): ce percentage reduction = -307.473, fidelity improvement = -0.000, reconstruction time: 5.852e-02
************************* Best Cases *************************
{'ce_percent': -362.680492292011, 'reconstructor_time': 0.0006260871887207031, 'best_case': (4, 5), 'hw_ce': 0.0010141984482090463, 'cutting_ce': 0.0046924983729915515}
{'ce_percent': -307.4733353198565, 'reconstructor_time': 0.0585169792175293, 'best_case': (9, 12), 'hw_ce': 0.001336445593231441, 'cutting_ce': 0.005445659433475396}
**************************************************
Processing ./hardware/benchmark_data/supremacy_ibmq_boeblingen/hw_plotter_input_ibmq_boeblingen_sametotal.p
case (4, 5): ce percentage reduction = -286.877, fidelity improvement = 0.000, reconstruction time: 6.704e-04
case (9, 12): ce percentage reduction = -1393.857, fidelity improvement = -0.000, reconstruction time: 5.845e-02
************************* Best Cases *************************
{'ce_percent': -286.87710254631617, 'reconstructor_time': 0.0006704330444335938, 'best_case': (4, 5), 'hw_ce': 0.0010141984482090463, 'cutting_ce': 0.003923701570500859}
{'ce_percent': -1393.8568736428929, 'reconstructor_time': 0.05845475196838379, 'best_case': (9, 12), 'hw_ce': 0.001336445593231441, 'cutting_ce': 0.01996458435698542}
**************************************************
----------------------------------------------------------------------------------------------------
